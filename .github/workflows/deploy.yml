name: Deploy Dolciluxe

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Job kiểm tra và build code
  verify-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Ensure lock file exists
        run: |
          cd backend
          if [ ! -f "package-lock.json" ]; then
            npm install --package-lock-only
          fi
      # Setup Node.js với cache
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'
      
      # Kiểm tra backend
      - name: Verify Backend
        run: |
          cd backend
          npm ci      
      # Kiểm tra frontend
      - name: Verify Frontend
        run: |
          cd frontend
          npm ci
          npm run lint

  # Job triển khai frontend lên Vercel
  deploy-frontend:
    needs: verify-and-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Vercel CLI
        run: npm install -g vercel@latest
      
      - name: Deploy to Vercel
        run: |
          cd frontend
          vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --confirm
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  # Job triển khai backend lên Render
  deploy-backend:
    needs: verify-and-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to Render
        run: |
          curl -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
          -H "Accept: application/json" \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}"
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}

  # Job thông báo kết quả
  notify:
    needs: [deploy-frontend, deploy-backend]
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status == 'success' && '#36a64f' || '#ff0000' }}
          SLACK_TITLE: 'Deploy Dolciluxe ${{ job.status }}'
          SLACK_MESSAGE: 'Triển khai ${{ github.ref }} đã ${{ job.status }}'
          SLACK_USERNAME: 'GitHub Actions'
